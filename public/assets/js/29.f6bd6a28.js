(window.webpackJsonp=window.webpackJsonp||[]).push([[29],{582:function(t,a,s){"use strict";s.r(a);var e=s(13),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"react知识点总结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#react知识点总结"}},[t._v("#")]),t._v(" React知识点总结")]),t._v(" "),s("h2",{attrs:{id:"组件基础"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#组件基础"}},[t._v("#")]),t._v(" 组件基础")]),t._v(" "),s("h3",{attrs:{id:"react事件机制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#react事件机制"}},[t._v("#")]),t._v(" react事件机制")]),t._v(" "),s("details",{staticClass:"custom-block details"},[s("summary",[t._v("答案")]),t._v(" "),s("div",{staticClass:"language-jsx line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-jsx"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("onClick")]),s("span",{pre:!0,attrs:{class:"token script language-javascript"}},[s("span",{pre:!0,attrs:{class:"token script-punctuation punctuation"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("handleClick")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("bind")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("点我")]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("React并不是将click事件绑定到了div的真实DOM上，而是在document处监听了所有的事件，当事件发生并且冒泡到document处的时候，React将事件内容封装并交由真正的处理函数运行。这样的方式不仅仅减少了内存的消耗，还能在组件挂在销毁时统一订阅和移除事件。")])]),t._v(" "),s("h3",{attrs:{id:"合成事件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#合成事件"}},[t._v("#")]),t._v(" 合成事件")]),t._v(" "),s("details",{staticClass:"custom-block details"},[s("summary",[t._v("答案")]),t._v(" "),s("ul",[s("li",[t._v("JSX 上写的事件并没有绑定在对应的真实 DOM 上，而是通过事件代理的方式，将所有的事件都统一绑定在了 document 上。这样的方式不仅减少了内存消耗，还能在组件挂载销毁时统一订阅和移除事件。")]),t._v(" "),s("li",[t._v("另外冒泡到 document 上的事件也不是原生浏览器事件，而是 React 自己实现的合成事件（SyntheticEvent）。因此我们如果不想要事件冒泡的话，调用 event.stopPropagation 是无效的，而应该调用 event.preventDefault。")])])]),t._v(" "),s("h3",{attrs:{id:"合成事件的目的"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#合成事件的目的"}},[t._v("#")]),t._v(" 合成事件的目的")]),t._v(" "),s("details",{staticClass:"custom-block details"},[s("summary",[t._v("答案")]),t._v(" "),s("ul",[s("li",[t._v("兼容所有浏览器，更好的跨平台；")]),t._v(" "),s("li",[t._v("将事件统一存放在一个数组，避免频繁的新增与删除（垃圾回收）。")]),t._v(" "),s("li",[t._v("方便 react 统一管理和事务机制。")])])]),t._v(" "),s("h3",{attrs:{id:"react的事件和普通原生事件有什么不同"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#react的事件和普通原生事件有什么不同"}},[t._v("#")]),t._v(" React的事件和普通原生事件有什么不同")]),t._v(" "),s("details",{staticClass:"custom-block details"},[s("summary",[t._v("答案")]),t._v(" "),s("ul",[s("li",[t._v("对于事件名称命名方式，原生事件为全小写，react 事件采用小驼峰；")]),t._v(" "),s("li",[t._v("对于事件函数处理语法，原生事件为字符串，react 事件为函数；")]),t._v(" "),s("li",[t._v("react 事件不能采用 return false 的方式来阻止浏览器的默认行为，而必须要地明确地调用preventDefault()来阻止默认行为。")])])]),t._v(" "),s("h3",{attrs:{id:"react事件与原生事件的执行顺序"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#react事件与原生事件的执行顺序"}},[t._v("#")]),t._v(" React事件与原生事件的执行顺序")]),t._v(" "),s("details",{staticClass:"custom-block details"},[s("summary",[t._v("答案")]),t._v(" "),s("ul",[s("li",[t._v("事件的执行顺序为原生事件先执行，合成事件后执行。")]),t._v(" "),s("li",[t._v("合成事件会冒泡绑定到 document 上，所以尽量避免原生事件与合成事件混用，如果原生事件阻止冒泡，可能会导致合成事件不执行，因为需要冒泡到document 上合成事件才会执行。")])])]),t._v(" "),s("h3",{attrs:{id:"react-组件中怎么做事件代理-它的原理是什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#react-组件中怎么做事件代理-它的原理是什么"}},[t._v("#")]),t._v(" React 组件中怎么做事件代理？它的原理是什么？")]),t._v(" "),s("details",{staticClass:"custom-block details"},[s("summary",[t._v("答案")]),t._v(" "),s("ul",[s("li",[t._v("React基于Virtual DOM实现了一个SyntheticEvent层（合成事件层），事件处理器会接收到一个合成事件对象的实例，所有的事件都自动绑定在最外层上。")])])]),t._v(" "),s("h3",{attrs:{id:"react底层对合成事件做了什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#react底层对合成事件做了什么"}},[t._v("#")]),t._v(" React底层对合成事件做了什么")]),t._v(" "),s("details",{staticClass:"custom-block details"},[s("summary",[t._v("答案")]),t._v(" "),s("ul",[s("li",[t._v("事件委派\n"),s("ul",[s("li",[t._v("React会把所有的事件绑定到结构的最外层，使用统一的事件监听器，这个事件监听器上维持了一个映射来保存所有组件内部事件监听和处理函数")])])]),t._v(" "),s("li",[t._v("自动绑定\n"),s("ul",[s("li",[t._v("React组件中，每个方法的上下文都会指向该组件的实例，即自动绑定this为当前组件。")])])])])]),t._v(" "),s("h3",{attrs:{id:"hoc是什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#hoc是什么"}},[t._v("#")]),t._v(" HOC是什么")]),t._v(" "),s("details",{staticClass:"custom-block details"},[s("summary",[t._v("答案")]),t._v(" "),s("ul",[s("li",[t._v("高阶组件（HOC）是 React 中用于复用组件逻辑的一种高级技巧。它是一种基于 React 的组合特性而形成的设计模式。")]),t._v(" "),s("li",[t._v("简言之，HOC是一种组件的设计模式，HOC接受一个组件和额外的参数（如果需要），返回一个新的组件。HOC 是纯函数，没有副作用。")])])]),t._v(" "),s("h3",{attrs:{id:"hoc的优缺点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#hoc的优缺点"}},[t._v("#")]),t._v(" HOC的优缺点")]),t._v(" "),s("details",{staticClass:"custom-block details"},[s("summary",[t._v("答案")]),t._v(" "),s("ul",[s("li",[t._v("优点∶ 逻辑服用、不影响被包裹组件的内部逻辑。")]),t._v(" "),s("li",[t._v("缺点∶ hoc传递给被包裹组件的props容易和被包裹后的组件重名，进而被覆盖")])])]),t._v(" "),s("h3",{attrs:{id:"render-props是什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#render-props是什么"}},[t._v("#")]),t._v(" Render props是什么")]),t._v(" "),s("details",{staticClass:"custom-block details"},[s("summary",[t._v("答案")]),t._v(" "),s("ul",[s("li",[t._v('"render prop"是指一种在 React 组件之间使用一个值为函数的 prop 共享代码的简单技术 类似vue的props')])])]),t._v(" "),s("h3",{attrs:{id:"props的优缺点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#props的优缺点"}},[t._v("#")]),t._v(" props的优缺点")]),t._v(" "),s("details",{staticClass:"custom-block details"},[s("summary",[t._v("答案")]),t._v(" "),s("ul",[s("li",[t._v("优点：数据共享、代码复用，将组件内的state作为props传递给调用者，将渲染逻辑交给调用者。")]),t._v(" "),s("li",[t._v("缺点：无法在 return 语句外访问数据、多层嵌套写法不够优雅")])])]),t._v(" "),s("h3",{attrs:{id:"hook是什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#hook是什么"}},[t._v("#")]),t._v(" Hook是什么")]),t._v(" "),s("details",{staticClass:"custom-block details"},[s("summary",[t._v("答案")]),t._v(" "),s("ul",[s("li",[t._v("Hook是 React 16.8 的新增特性。它可以让你在不编写 class 的情况下使用 state 以及其他的 React 特性。通过自定义hook，可以复用代码逻辑。")])])]),t._v(" "),s("h3",{attrs:{id:"hook的优点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#hook的优点"}},[t._v("#")]),t._v(" Hook的优点")]),t._v(" "),s("details",{staticClass:"custom-block details"},[s("summary",[t._v("答案")]),t._v(" "),s("ul",[s("li",[t._v("使用直观；")]),t._v(" "),s("li",[t._v("解决hoc的prop 重名问题；")]),t._v(" "),s("li",[t._v("解决render props 因共享数据 而出现嵌套地狱的问题；")]),t._v(" "),s("li",[t._v("能在return之外使用数据的问题。")])])]),t._v(" "),s("h3",{attrs:{id:"component-element-instance-之间有什么区别和联系"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#component-element-instance-之间有什么区别和联系"}},[t._v("#")]),t._v(" Component, Element, Instance 之间有什么区别和联系")]),t._v(" "),s("details",{staticClass:"custom-block details"},[s("summary",[t._v("答案")]),t._v(" "),s("ul",[s("li",[t._v("元素\n"),s("ul",[s("li",[t._v("一个元素element是一个普通对象(plain object)，描述了对于一个DOM节点或者其他组件component，你想让它在屏幕上呈现成什么样子。元素element可以在它的属性props中包含其他元素(译注:用于形成元素树)。创建一个React元素element成本很低。元素element创建之后是不可变的")])])]),t._v(" "),s("li",[t._v("组件\n"),s("ul",[s("li",[t._v("一个组件component可以通过多种方式声明。可以是带有一个render()方法的类，简单点也可以定义为一个函数。这两种情况下，它都把属性props作为输入，把返回的一棵元素树作为输出。")])])]),t._v(" "),s("li",[t._v("实例\n"),s("ul",[s("li",[t._v("一个实例instance是你在所写的组件类component class中使用关键字this所指向的东西(译注:组件实例)。它用来存储本地状态和响应生命周期事件很有用。")])])]),t._v(" "),s("li",[t._v("函数式组件(Functional component)根本没有实例instance。类组件(Class component)有实例instance")])])]),t._v(" "),s("h3",{attrs:{id:"对componentwillreceiveprops-的理解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#对componentwillreceiveprops-的理解"}},[t._v("#")]),t._v(" 对componentWillReceiveProps 的理解")]),t._v(" "),s("details",{staticClass:"custom-block details"},[s("summary",[t._v("答案")]),t._v(" "),s("ul",[s("li",[t._v("该方法当props发生变化时执行，初始化render时不执行，在这个回调函数里面，你可以根据属性的变化，通过调用this.setState()来更新你的组件状态，旧的属性还是可以通过this.props来获取,这里调用更新状态是安全的，并不会触发额外的render调用。")]),t._v(" "),s("li",[t._v("一般用于父组件状态更新时子组件的重新渲染。")])])]),t._v(" "),s("h3",{attrs:{id:"哪些方法会触发react的重新渲染"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#哪些方法会触发react的重新渲染"}},[t._v("#")]),t._v(" 哪些方法会触发React的重新渲染")]),t._v(" "),s("details",{staticClass:"custom-block details"},[s("summary",[t._v("答案")]),t._v(" "),s("ul",[s("li",[t._v("setState()方法被调用 (传入的值为null的时候不会重新渲染)")]),t._v(" "),s("li",[t._v("父组件重新渲染，只要父组件重新渲染，无论props是否变化，子组件都将重新渲染")])])]),t._v(" "),s("h3",{attrs:{id:"重新渲染时render会做些什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#重新渲染时render会做些什么"}},[t._v("#")]),t._v(" 重新渲染时render会做些什么")]),t._v(" "),s("details",{staticClass:"custom-block details"},[s("summary",[t._v("答案")]),t._v(" "),s("ul",[s("li",[t._v("会对新旧 VNode 进行对比，也就是我们所说的Diff算法")]),t._v(" "),s("li",[t._v("对新旧两棵树进行一个深度优先遍历，这样每一个节点都会一个标记，在到深度遍历的时候，每遍历到一和个节点，就把该节点和新的节点树进行对比，如果有差异就放到一个对象里面")]),t._v(" "),s("li",[t._v("遍历差异对象，根据差异的类型，根据对应对规则更新VNode")])])]),t._v(" "),s("h3",{attrs:{id:"react声明组件有哪几种方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#react声明组件有哪几种方法"}},[t._v("#")]),t._v(" React声明组件有哪几种方法")]),t._v(" "),s("details",{staticClass:"custom-block details"},[s("summary",[t._v("答案")]),t._v(" "),s("ul",[s("li",[t._v("函数式定义的无状态组件")]),t._v(" "),s("li",[t._v("ES5原生方式React.createClass定义的组件(会自动绑定函数，导致不必要的性能开销)")]),t._v(" "),s("li",[t._v("ES6形式的extends React.Component定义的组件")])])]),t._v(" "),s("h3",{attrs:{id:"有状态组件和无状态组件的区别和特点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#有状态组件和无状态组件的区别和特点"}},[t._v("#")]),t._v(" 有状态组件和无状态组件的区别和特点")]),t._v(" "),s("details",{staticClass:"custom-block details"},[s("summary",[t._v("答案")]),t._v(" "),s("ul",[s("li",[t._v("有状态组件\n"),s("ul",[s("li",[t._v("是类组件")]),t._v(" "),s("li",[t._v("有继承")]),t._v(" "),s("li",[t._v("可以使用this")]),t._v(" "),s("li",[t._v("可以使用react的生命周期")]),t._v(" "),s("li",[t._v("内部使用 state，维护自身状态的变化，有状态组件根据外部组件传入的 props 和自身的 state进行渲染。")])])]),t._v(" "),s("li",[t._v("无状态组件\n"),s("ul",[s("li",[t._v("不依赖自身的状态state")]),t._v(" "),s("li",[t._v("可以是类组件或者函数组件。")]),t._v(" "),s("li",[t._v("可以完全避免使用 this 关键字。（由于使用的是箭头函数事件无需绑定）")]),t._v(" "),s("li",[t._v("组件内部不维护 state ，只根据外部组件传入的 props 进行渲染的组件，当 props 改变时，组件重新渲染。")])])])])]),t._v(" "),s("h3",{attrs:{id:"react里的fragment是什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#react里的fragment是什么"}},[t._v("#")]),t._v(" React里的Fragment是什么")]),t._v(" "),s("details",{staticClass:"custom-block details"},[s("summary",[t._v("答案")]),t._v(" "),s("ul",[s("li",[t._v("React 中的一个常见模式是一个组件返回多个元素。Fragments 允许你将子列表分组，而无需向 DOM 添加额外节点。")]),t._v(" "),s("li",[s("em",[t._v("即将其作为一个占位的标签，用来包裹内部所有元素使其变成一个大标签")])])])]),t._v(" "),s("h3",{attrs:{id:"react如何获取页面内dom元素"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#react如何获取页面内dom元素"}},[t._v("#")]),t._v(" React如何获取页面内dom元素")]),t._v(" "),s("details",{staticClass:"custom-block details"},[s("summary",[t._v("答案")]),t._v(" "),s("ul",[s("li",[t._v("字符串格式："),s("div",{staticClass:"language-jsx line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-jsx"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("p")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("ref")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("info"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("span")]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("p")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])])]),t._v(" "),s("li",[t._v("函数格式："),s("div",{staticClass:"language-jsx line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-jsx"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("p")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("ref")]),s("span",{pre:!0,attrs:{class:"token script language-javascript"}},[s("span",{pre:!0,attrs:{class:"token script-punctuation punctuation"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("ele")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("info "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" ele"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("p")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v(" ref对应一个方法，并传一个参数作为节点的实例 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])])]),t._v(" "),s("li",[t._v("createRef()方法 React16"),s("div",{staticClass:"language-jsx line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-jsx"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyComponent")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("React"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Component")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("constructor")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("props")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("super")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("props"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("myRef "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" React"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createRef")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("render")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("ref")]),s("span",{pre:!0,attrs:{class:"token script language-javascript"}},[s("span",{pre:!0,attrs:{class:"token script-punctuation punctuation"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("myRef"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br")])])])]),t._v(" "),s("p",[t._v("}\n```")])]),t._v(" "),s("h3",{attrs:{id:"render阶段可以访问refs吗-为什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#render阶段可以访问refs吗-为什么"}},[t._v("#")]),t._v(" render阶段可以访问refs吗？为什么？")]),t._v(" "),s("details",{staticClass:"custom-block details"},[s("summary",[t._v("答案")]),t._v(" "),s("ul",[s("li",[t._v("不能，render阶段里dom还未生成，获取需要在pre-commit阶段和commit阶段\n"),s("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/98a52a67abd14d8cb2ba1fc00c0662a2~tplv-k3u1fbpfcp-watermark.awebp",alt:""}})])])]),t._v(" "),s("h3",{attrs:{id:"react中受控组件与非受控组件是什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#react中受控组件与非受控组件是什么"}},[t._v("#")]),t._v(" React中受控组件与非受控组件是什么")]),t._v(" "),s("details",{staticClass:"custom-block details"},[s("summary",[t._v("答案")]),t._v(" "),s("ul",[s("li",[t._v("受控组件:在使用表单来收集用户输入时，例如"),s("code",[t._v("<input><select><textearea>")]),t._v("等元素都要绑定一个change事件，当表单的状态发生变化，就会触发onChange事件，更新组件的state。这种组件在React中被称为受控组件，")]),t._v(" "),s("li",[t._v("非受控组件:如果一个表单组件没有value props（单选和复选按钮对应的是checked props）时，就可以称为非受控组件。在非受控组件中，可以使用一个ref来从DOM获得表单值。而不是为每个状态更新编写一个事件处理程序。")])])]),t._v(" "),s("h3",{attrs:{id:"react里的构造函数有什么用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#react里的构造函数有什么用"}},[t._v("#")]),t._v(" React里的构造函数有什么用")]),t._v(" "),s("details",{staticClass:"custom-block details"},[s("summary",[t._v("答案")]),t._v(" "),s("ul",[s("li",[t._v("通过将对象分配给this.state来初始化本地状态")]),t._v(" "),s("li",[t._v("将事件处理程序方法绑定到实例上")])])]),t._v(" "),s("h2",{attrs:{id:"数据管理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数据管理"}},[t._v("#")]),t._v(" 数据管理")]),t._v(" "),s("h3",{attrs:{id:"react-setstate后发生了什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#react-setstate后发生了什么"}},[t._v("#")]),t._v(" React setState后发生了什么")]),t._v(" "),s("details",{staticClass:"custom-block details"},[s("summary",[t._v("答案")]),t._v(" "),s("ul",[s("li",[t._v("在 React 得到元素树之后，React 会自动计算出新的树与老树的节点差异，然后根据差异对界面进行最小化重渲染。")]),t._v(" "),s("li",[t._v("如果在短时间内频繁setState。React会将state的改变压入栈中，在合适的时机，批量更新state和视图，达到提高性能的效果。")])])]),t._v(" "),s("h3",{attrs:{id:"setstate是同步还是异步"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#setstate是同步还是异步"}},[t._v("#")]),t._v(" setState是同步还是异步")]),t._v(" "),s("details",{staticClass:"custom-block details"},[s("summary",[t._v("答案")]),t._v(" "),s("ul",[s("li",[t._v("setState 并不是单纯同步/异步的，它的表现会因调用场景的不同而不同。。")]),t._v(" "),s("li",[t._v("在源码中，通过 isBatchingUpdates 来判断setState 是先存进 state 队列还是直接更新，如果值为 true 则执行异步操作，为 false 则直接更新。\n"),s("ul",[s("li",[t._v("异步： 在 React 可以控制的地方，就为 true，比如在 React 生命周期事件和合成事件中，都会走合并操作，延迟更新的策略。")]),t._v(" "),s("li",[t._v("同步： 在 React 无法控制的地方，比如原生事件，具体就是在 addEventListener 、setTimeout、setInterval 等事件中，就只能同步更新。")])])])])]),t._v(" "),s("h3",{attrs:{id:"react中setstate的第二个参数作用是什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#react中setstate的第二个参数作用是什么"}},[t._v("#")]),t._v(" React中setState的第二个参数作用是什么？")]),t._v(" "),s("details",{staticClass:"custom-block details"},[s("summary",[t._v("答案")]),t._v(" "),s("ul",[s("li",[t._v("setState 的第二个参数是一个可选的回调函数。这个回调函数将在组件重新渲染后执行。等价于在 componentDidUpdate 生命周期内执行")])])]),t._v(" "),s("h3",{attrs:{id:"react中的setstate和replacestate的区别是什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#react中的setstate和replacestate的区别是什么"}},[t._v("#")]),t._v(" React中的setState和replaceState的区别是什么？")]),t._v(" "),s("details",{staticClass:"custom-block details"},[s("summary",[t._v("答案")]),t._v(" "),s("ul",[s("li",[t._v("setState 是修改其中的部分状态，相当于 Object.assign，只是覆盖，不会减少原来的状态。")]),t._v(" "),s("li",[t._v("而replaceState 是完全替换原来的状态，相当于赋值，将原来的 state 替换为另一个对象，如果新状态属性减少，那么 state 中就没有这个状态了。")])])]),t._v(" "),s("h2",{attrs:{id:"生命周期"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#生命周期"}},[t._v("#")]),t._v(" 生命周期")]),t._v(" "),s("h3",{attrs:{id:"react生命周期主要分成哪几个阶段"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#react生命周期主要分成哪几个阶段"}},[t._v("#")]),t._v(" React生命周期主要分成哪几个阶段")]),t._v(" "),s("details",{staticClass:"custom-block details"},[s("summary",[t._v("答案")]),t._v(" "),s("ul",[s("li",[t._v("装载阶段（Mount），组件第一次在DOM树中被渲染的过程；")]),t._v(" "),s("li",[t._v("更新过程（Update），组件状态发生变化，重新更新渲染的过程；")]),t._v(" "),s("li",[t._v("卸载过程（Unmount），组件从DOM树中被移除的过程；")])])]),t._v(" "),s("h3",{attrs:{id:"挂载阶段有哪些生命周期方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#挂载阶段有哪些生命周期方法"}},[t._v("#")]),t._v(" 挂载阶段有哪些生命周期方法")]),t._v(" "),s("details",{staticClass:"custom-block details"},[s("summary",[t._v("答案")]),t._v(" "),s("ul",[s("li",[t._v("constructor")]),t._v(" "),s("li",[t._v("getDerivedStateFromProps")]),t._v(" "),s("li",[t._v("render")]),t._v(" "),s("li",[t._v("componentDidMount")])])]),t._v(" "),s("h3",{attrs:{id:"更新阶段有哪些生命周期方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#更新阶段有哪些生命周期方法"}},[t._v("#")]),t._v(" 更新阶段有哪些生命周期方法")]),t._v(" "),s("details",{staticClass:"custom-block details"},[s("summary",[t._v("答案")]),t._v(" "),s("ul",[s("li",[t._v("getDerivedStateFromProps")]),t._v(" "),s("li",[t._v("shouldComponentUpdate")]),t._v(" "),s("li",[t._v("render")]),t._v(" "),s("li",[t._v("getSnapshotBeforeUpdate")]),t._v(" "),s("li",[t._v("componentDidUpdate")])])]),t._v(" "),s("h3",{attrs:{id:"卸载阶段有哪些生命周期方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#卸载阶段有哪些生命周期方法"}},[t._v("#")]),t._v(" 卸载阶段有哪些生命周期方法")]),t._v(" "),s("details",{staticClass:"custom-block details"},[s("summary",[t._v("答案")]),t._v(" "),s("ul",[s("li",[t._v("componentWillUnmount()")])])]),t._v(" "),s("h3",{attrs:{id:"如果没有调用-setstate-props-值也没有变化-是不是组件就不会重新渲染"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#如果没有调用-setstate-props-值也没有变化-是不是组件就不会重新渲染"}},[t._v("#")]),t._v(" 如果没有调用 setState，props 值也没有变化，是不是组件就不会重新渲染？")]),t._v(" "),s("details",{staticClass:"custom-block details"},[s("summary",[t._v("答案")]),t._v(" "),s("ul",[s("li",[t._v("会 只要不是null 无论值有没有变化都会重新渲染")]),t._v(" "),s("li",[t._v("可以调用shouldComponentUpdate方法来控制更新后是否需要渲染，可以比较 this.props 和 nextProps ，this.state 和 nextState 值是否变化，来确认返回 true 或者 false")])])]),t._v(" "),s("h3",{attrs:{id:"组件卸载阶段用来干什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#组件卸载阶段用来干什么"}},[t._v("#")]),t._v(" 组件卸载阶段用来干什么")]),t._v(" "),s("details",{staticClass:"custom-block details"},[s("summary",[t._v("答案")]),t._v(" "),s("ul",[s("li",[t._v("清除 timer，取消网络请求或清除")]),t._v(" "),s("li",[t._v("取消在 componentDidMount() 中创建的订阅等；")])])]),t._v(" "),s("h3",{attrs:{id:"react常见生命周期的运行流程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#react常见生命周期的运行流程"}},[t._v("#")]),t._v(" React常见生命周期的运行流程")]),t._v(" "),s("details",{staticClass:"custom-block details"},[s("summary",[t._v("答案")]),t._v(" "),s("ol",[s("li",[t._v("挂载阶段，首先执行constructor构造方法，来创建组件")]),t._v(" "),s("li",[t._v("创建完成之后，就会执行render方法，该方法会返回需要渲染的内容")]),t._v(" "),s("li",[t._v("随后，React会将需要渲染的内容挂载到DOM树上")]),t._v(" "),s("li",[t._v("挂载完成之后就会执行componentDidMount生命周期函数")]),t._v(" "),s("li",[t._v("如果我们给组件创建一个props（用于组件通信）、调用setState（更改state中的数据）、调用forceUpdate（强制更新组件）时，都会重新调用render函数")]),t._v(" "),s("li",[t._v("render函数重新执行之后，就会重新进行DOM树的挂载")]),t._v(" "),s("li",[t._v("挂载完成之后就会执行componentDidUpdate生命周期函数")]),t._v(" "),s("li",[t._v("当移除组件时，就会执行componentWillUnmount生命周期函数")])]),t._v(" "),s("ul",[s("li",[s("em",[t._v("constructor() -> componentWillMount() -> render() -> componentDidMount()")])])])]),t._v(" "),s("h2",{attrs:{id:"组件通信"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#组件通信"}},[t._v("#")]),t._v(" 组件通信")]),t._v(" "),s("h3",{attrs:{id:"组件通信方式有哪些"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#组件通信方式有哪些"}},[t._v("#")]),t._v(" 组件通信方式有哪些")]),t._v(" "),s("details",{staticClass:"custom-block details"},[s("summary",[t._v("答案")]),t._v(" "),s("ul",[s("li",[t._v("⽗组件向⼦组件通讯: ⽗组件可以向⼦组件通过传 props 的⽅式，向⼦组件进⾏通讯")]),t._v(" "),s("li",[t._v("⼦组件向⽗组件通讯: props+回调的⽅式，⽗组件向⼦组件传递props进⾏通讯，此props为作⽤域为⽗组件⾃身的函 数，⼦组件调⽤该函数，将⼦组件想要传递的信息，作为参数，传递到⽗组件的作⽤域中")]),t._v(" "),s("li",[t._v("兄弟组件通信: 找到这两个兄弟节点共同的⽗节点,结合上⾯两种⽅式由⽗节点转发信息进⾏通信")]),t._v(" "),s("li",[t._v("跨层级通信: Context 设计⽬的是为了共享那些对于⼀个组件树⽽⾔是“全局”的数据，例如当前认证的⽤户、主题或⾸选语⾔，对于跨越多层的全局数据通过 Context 通信再适合不过")]),t._v(" "),s("li",[t._v("发布订阅模式: 发布者发布事件，订阅者监听事件并做出反应,我们可以通过引⼊event模块进⾏通信")]),t._v(" "),s("li",[t._v("全局状态管理⼯具: 借助Redux或者Mobx等全局状态管理⼯具进⾏通信,这种⼯具会维护⼀个全局状态中⼼Store,并根据不同的事件产⽣新的状态")])])]),t._v(" "),s("h2",{attrs:{id:"路由"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#路由"}},[t._v("#")]),t._v(" 路由")]),t._v(" "),s("h3",{attrs:{id:"react-router实现的思想"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#react-router实现的思想"}},[t._v("#")]),t._v(" react-router实现的思想")]),t._v(" "),s("details",{staticClass:"custom-block details"},[s("summary",[t._v("答案")]),t._v(" "),s("ul",[s("li",[t._v("基于 history 库来实现上述不同的客户端路由实现思想，并且能够保存历史记录等，磨平浏览器差异，上层无感知")]),t._v(" "),s("li",[t._v("通过维护的列表，在每次 URL 发生变化的回收，通过配置的 路由路径，匹配到对应的 Component，并且 render")])])]),t._v(" "),s("h3",{attrs:{id:"如何配置-react-router-实现路由切换"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#如何配置-react-router-实现路由切换"}},[t._v("#")]),t._v(" 如何配置 React-Router 实现路由切换")]),t._v(" "),s("details",{staticClass:"custom-block details"},[s("summary",[t._v("答案")]),t._v(" "),s("ul",[s("li",[t._v("使用Route 组件")])]),t._v(" "),s("div",{staticClass:"language-jsx line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-jsx"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// when location = { pathname: '/about' }")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Route")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("path")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("'")]),t._v("/about"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("'")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("component")]),s("span",{pre:!0,attrs:{class:"token script language-javascript"}},[s("span",{pre:!0,attrs:{class:"token script-punctuation punctuation"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("About"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// renders <About/>")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Route")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("path")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("'")]),t._v("/contact"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("'")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("component")]),s("span",{pre:!0,attrs:{class:"token script language-javascript"}},[s("span",{pre:!0,attrs:{class:"token script-punctuation punctuation"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("Contact"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// renders null")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Route")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("component")]),s("span",{pre:!0,attrs:{class:"token script language-javascript"}},[s("span",{pre:!0,attrs:{class:"token script-punctuation punctuation"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("Always"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// renders <Always/>")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br")])])]),t._v(" "),s("h3",{attrs:{id:"react-router里的switch是什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#react-router里的switch是什么"}},[t._v("#")]),t._v(" React-Router里的switch是什么")]),t._v(" "),s("details",{staticClass:"custom-block details"},[s("summary",[t._v("答案")]),t._v(" "),s("div",{staticClass:"language-jsx line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-jsx"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// <Switch> 用于将 <Route> 分组。")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//一个 <Switch> 会遍历其所有的子 <Route>元素，并仅渲染与当前地址匹配的第一个元素。")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Switch")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("\n    ")]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Route")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("exact")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("path")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("/"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("component")]),s("span",{pre:!0,attrs:{class:"token script language-javascript"}},[s("span",{pre:!0,attrs:{class:"token script-punctuation punctuation"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("Home"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),s("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("\n    ")]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Route")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("path")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("/about"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("component")]),s("span",{pre:!0,attrs:{class:"token script language-javascript"}},[s("span",{pre:!0,attrs:{class:"token script-punctuation punctuation"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("About"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),s("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("\n    ")]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Route")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("path")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("/contact"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("component")]),s("span",{pre:!0,attrs:{class:"token script language-javascript"}},[s("span",{pre:!0,attrs:{class:"token script-punctuation punctuation"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("Contact"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),s("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("\n")]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Switch")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br")])])]),t._v(" "),s("h3",{attrs:{id:"react-router怎么设置重定向"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#react-router怎么设置重定向"}},[t._v("#")]),t._v(" React-Router怎么设置重定向？")]),t._v(" "),s("details",{staticClass:"custom-block details"},[s("summary",[t._v("答案")]),t._v(" "),s("div",{staticClass:"language-jsx line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-jsx"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 使用<Redirect>组件实现路由的重定向：")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Switch")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("\n  ")]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Redirect")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("from")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("'")]),t._v("/users/:id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("'")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("to")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("'")]),t._v("/users/profile/:id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("'")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),s("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("\n  ")]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Route")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("path")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("'")]),t._v("/users/profile/:id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("'")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("component")]),s("span",{pre:!0,attrs:{class:"token script language-javascript"}},[s("span",{pre:!0,attrs:{class:"token script-punctuation punctuation"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("Profile"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),s("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("\n")]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Switch")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br")])])]),t._v(" "),s("h3",{attrs:{id:"react-router-里的-link-标签和-a-标签的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#react-router-里的-link-标签和-a-标签的区别"}},[t._v("#")]),t._v(" react-router 里的 Link 标签和 a 标签的区别")]),t._v(" "),s("details",{staticClass:"custom-block details"},[s("summary",[t._v("答案")]),t._v(" "),s("p",[t._v("从最终渲染的 DOM 来看，这两者都是链接，都是 标签，区别是∶\n<Link>是react-router 里实现路由跳转的链接，一般配合<Router> 使用，react-router接管了其默认的链接跳转行为，区别于传统的页面跳转，<Link> 的“跳转”行为只会触发相匹配的<Router>对应的页面内容更新，而不会刷新整个页面。")])]),t._v(" "),s("h3",{attrs:{id:"react-router中的link做了哪些事情"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#react-router中的link做了哪些事情"}},[t._v("#")]),t._v(" react-router中的link做了哪些事情")]),t._v(" "),s("details",{staticClass:"custom-block details"},[s("summary",[t._v("答案")]),t._v(" "),s("ul",[s("li",[t._v("有onclick那就执行onclick")]),t._v(" "),s("li",[t._v("click的时候阻止a标签默认事件")]),t._v(" "),s("li",[t._v("根据跳转href(即是to)，用history (web前端路由两种方式之一，history & hash)跳转，此时只是链接变了，并没有刷新页面而a标签就是普通的超链接了，用于从当前页面跳转到href指向的另一 个页面(非锚点情况)。")])])]),t._v(" "),s("h3",{attrs:{id:"react-router如何获取url的参数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#react-router如何获取url的参数"}},[t._v("#")]),t._v(" React-Router如何获取URL的参数？")]),t._v(" "),s("details",{staticClass:"custom-block details"},[s("summary",[t._v("答案")]),t._v(" "),s("ul",[s("li",[t._v("get传值：\n"),s("ul",[s("li",[t._v("路由配置还是普通的配置，如：'admin'，传参方式如：'admin?id='1111''。通过this.props.location.search获取url获取到一个字符串'?id='1111'\n可以用url，qs，querystring，浏览器提供的api URLSearchParams对象或者自己封装的方法去解析出id的值。")])])]),t._v(" "),s("li",[t._v("动态路由传值\n"),s("ul",[s("li",[t._v("路由需要配置成动态路由：如path='/admin/:id'，传参方式，如'admin/111'。通过this.props.match.params.id 取得url中的动态路由id部分的值，除此之外还可以通过useParams（Hooks）来获取")])])]),t._v(" "),s("li",[t._v("通过query或state传值\n"),s("ul",[s("li",[t._v("{pathname:'/admin',query:'111',state:'111'};。通过this.props.location.state或this.props.location.query来获取即可，传递的参数可以是对象、数组等，但是存在缺点就是只要刷新页面，参数就会丢失。")])])])])]),t._v(" "),s("h3",{attrs:{id:"react-router获取历史对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#react-router获取历史对象"}},[t._v("#")]),t._v(" React-Router获取历史对象")]),t._v(" "),s("details",{staticClass:"custom-block details"},[s("summary",[t._v("答案")]),t._v(" "),s("div",{staticClass:"language-jsx line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-jsx"}},[s("code",[t._v("BrowserRouter 创建的 "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("URL")]),t._v(" 格式：xxx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("com"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("path\nHashRouter 创建的 "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("URL")]),t._v(" 格式：xxx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("com"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("#"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("path\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])])]),t._v(" "),s("h3",{attrs:{id:"react-router实现精准匹配"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#react-router实现精准匹配"}},[t._v("#")]),t._v(" react-router实现精准匹配")]),t._v(" "),s("details",{staticClass:"custom-block details"},[s("summary",[t._v("答案")]),t._v(" "),s("ul",[s("li",[t._v("exact")])]),t._v(" "),s("div",{staticClass:"language-jsx line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-jsx"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// exact属性：它的作用就是精确匹配路径，经常与<Switch> 联合使用。只有当 URL 和该 <Route> 的 path 属性完全一致的情况下才能匹配上")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" Switch"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Route"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'react-router-dom'")]),t._v("\n   \n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Switch")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("\n   ")]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Route")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("exact")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("path")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("/"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("component")]),s("span",{pre:!0,attrs:{class:"token script language-javascript"}},[s("span",{pre:!0,attrs:{class:"token script-punctuation punctuation"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("Home"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Route")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("\n   ")]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Route")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("exact")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("path")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("/login"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("component")]),s("span",{pre:!0,attrs:{class:"token script language-javascript"}},[s("span",{pre:!0,attrs:{class:"token script-punctuation punctuation"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("Login"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Route")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("\n")]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Switch")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br")])])]),t._v(" "),s("h2",{attrs:{id:"redux"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#redux"}},[t._v("#")]),t._v(" Redux")]),t._v(" "),s("h3",{attrs:{id:"对redux的理解-redux主要拿来做什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#对redux的理解-redux主要拿来做什么"}},[t._v("#")]),t._v(" 对Redux的理解，Redux主要拿来做什么")]),t._v(" "),s("details",{staticClass:"custom-block details"},[s("summary",[t._v("答案")]),t._v(" "),s("ul",[s("li",[t._v("Redux是一个用来管理数据状态和UI状态的JavaScript应用工具。随着JavaScript单页应用（SPA）开发日趋复杂， JavaScript需要管理比任何时候都要多的state（状态）， Redux就是降低管理难度的。")]),t._v(" "),s("li",[t._v("单纯的Redux只是一个状态机，是没有UI呈现的，react- redux作用是将Redux的状态机和React的UI呈现绑定在一起，当你dispatch action改变state的时候，会自动更新页面。")])])]),t._v(" "),s("h3",{attrs:{id:"redux工作流程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#redux工作流程"}},[t._v("#")]),t._v(" Redux工作流程")]),t._v(" "),s("details",{staticClass:"custom-block details"},[s("summary",[t._v("答案")]),t._v(" "),s("ul",[s("li",[t._v("const store= createStore（fn）生成数据;")]),t._v(" "),s("li",[t._v("action: {type: Symble('action01), payload:'payload' }定义行为;")]),t._v(" "),s("li",[t._v("dispatch发起action：store.dispatch(doSomething('action001'));")]),t._v(" "),s("li",[t._v("reducer：处理action，返回新的state;")])]),t._v(" "),s("hr"),t._v(" "),s("p",[t._v("通俗解释")]),t._v(" "),s("ul",[s("li",[t._v("首先，用户（通过View）发出Action，发出方式就用到了dispatch方法")]),t._v(" "),s("li",[t._v("然后，Store自动调用Reducer，并且传入两个参数：当前State和收到的Action，Reducer会返回新的State")]),t._v(" "),s("li",[t._v("State—旦有变化，Store就会调用监听函数，来更新View")])])]),t._v(" "),s("h3",{attrs:{id:"redux中异步请求如何处理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#redux中异步请求如何处理"}},[t._v("#")]),t._v(" Redux中异步请求如何处理")]),t._v(" "),s("details",{staticClass:"custom-block details"},[s("summary",[t._v("答案")]),t._v(" "),s("p",[t._v("借助异步中间件")]),t._v(" "),s("ol",[s("li",[t._v("redux-thunk")]),t._v(" "),s("li",[t._v("redux-saga")])])]),t._v(" "),s("h3",{attrs:{id:"redux-怎么实现属性传递-介绍下原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#redux-怎么实现属性传递-介绍下原理"}},[t._v("#")]),t._v(" Redux 怎么实现属性传递，介绍下原理")]),t._v(" "),s("details",{staticClass:"custom-block details"},[s("summary",[t._v("答案")]),t._v(" "),s("p",[t._v("react-redux 数据传输∶ view--\x3eaction--\x3ereducer--\x3estore--\x3eview")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("view 上的AddClick 事件通过mapDispatchToProps 把数据传到action ---\x3e click:()=>dispatch(ADD)\naction 的ADD 传到reducer上\nreducer传到store上 const store = createStore(reducer);\nstore再通过 mapStateToProps 映射穿到view上text:State.text\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br")])])]),t._v(" "),s("h3",{attrs:{id:"redux-中间件是什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#redux-中间件是什么"}},[t._v("#")]),t._v(" Redux 中间件是什么？")]),t._v(" "),s("details",{staticClass:"custom-block details"},[s("summary",[t._v("答案")]),t._v(" "),s("ul",[s("li",[t._v("Redux 的中间件提供的是位于 action 被发起之后，到达 reducer 之前的扩展点")])]),t._v(" "),s("blockquote",[s("p",[t._v("增加前")]),t._v(" "),s("blockquote",[s("p",[t._v("view -→> action -> reducer -> store")])])]),t._v(" "),s("blockquote",[s("p",[t._v("增加后")]),t._v(" "),s("blockquote",[s("p",[t._v("view -> action -> middleware -> reducer -> store")])])]),t._v(" "),s("ul",[s("li",[t._v('在这一环节可以做一些"副作用"的操作，如异步请求、打印日志等。')])])]),t._v(" "),s("h3",{attrs:{id:"redux-状态管理器和变量挂载到-window-中有什么区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#redux-状态管理器和变量挂载到-window-中有什么区别"}},[t._v("#")]),t._v(" Redux 状态管理器和变量挂载到 window 中有什么区别")]),t._v(" "),s("details",{staticClass:"custom-block details"},[s("summary",[t._v("答案")]),t._v(" "),s("ul",[s("li",[t._v("两者都是存储数据以供后期使用。但是Redux状态更改可回溯——Time travel，数据多了的时候可以很清晰的知道改动在哪里发生，完整的提供了一套状态管理模式。")])])]),t._v(" "),s("h3",{attrs:{id:"mobox-和-redux-有什么区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mobox-和-redux-有什么区别"}},[t._v("#")]),t._v(" mobox 和 redux 有什么区别？")]),t._v(" "),s("details",{staticClass:"custom-block details"},[s("summary",[t._v("答案")]),t._v(" "),s("ul",[s("li",[t._v("共同点\n"),s("ul",[s("li",[t._v("为了解决状态管理混乱，无法有效同步的问题统一维护管理应用状态;")]),t._v(" "),s("li",[t._v("某一状态只有一个可信数据来源（通常命名为store，指状态容器）;")]),t._v(" "),s("li",[t._v("操作更新状态方式统一，并且可控（通常以action方式提供更新状态的途径）;")]),t._v(" "),s("li",[t._v("支持将store与React组件连接，如react-redux，mobx- react;")])])])]),t._v(" "),s("hr"),t._v(" "),s("ul",[s("li",[t._v("不同点\n"),s("ul",[s("li",[t._v("redux将数据保存在单一的store中，mobx将数据保存在分散的多个store中")]),t._v(" "),s("li",[t._v("redux使用plain object保存数据，需要手动处理变化后的操作;mobx适用observable保存数据，数据变化后自动处理响应的操作")]),t._v(" "),s("li",[t._v("redux使用不可变状态，这意味着状态是只读的，不能直接去修改它，而是应该返回一个新的状态，同时使用纯函数;mobx中的状态是可变的，可以直接对其进行修改")]),t._v(" "),s("li",[t._v("mobx相对来说比较简单，在其中有很多的抽象，mobx更多的使用面向对象的编程思维;redux会比较复杂，因为其中的函数式编程思想掌握起来不是那么容易，同时需要借助一系列的中间件来处理异步和副作用")]),t._v(" "),s("li",[t._v("mobx中有更多的抽象和封装，调试会比较困难，同时结果也难以预测;而redux提供能够进行时间回溯的开发工具，同时其纯函数以及更少的抽象，让调试变得更加的容易")])])])])]),t._v(" "),s("h3",{attrs:{id:"redux和vuex的相同与不同"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#redux和vuex的相同与不同"}},[t._v("#")]),t._v(" Redux和vuex的相同与不同")]),t._v(" "),s("details",{staticClass:"custom-block details"},[s("summary",[t._v("答案")]),t._v(" "),s("ul",[s("li",[t._v("区别\n"),s("ul",[s("li",[t._v("Vuex改进了Redux中的Action和Reducer函数，以mutations变化函数取代Reducer，无需switch，只需在对应的mutation函数里改变state值即可")]),t._v(" "),s("li",[t._v("Vuex由于Vue自动重新渲染的特性，无需订阅重新渲染函数，只要生成新的State即可")])])]),t._v(" "),s("li",[t._v("共同点\n"),s("ul",[s("li",[t._v("单—的数据源")]),t._v(" "),s("li",[t._v("变化可以预测")]),t._v(" "),s("li",[t._v("redux与vuex都是对mvvm思想的服务，将数据从视图中抽离的一种方案。")])])])])]),t._v(" "),s("h2",{attrs:{id:"hooks"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#hooks"}},[t._v("#")]),t._v(" Hooks")]),t._v(" "),s("h3",{attrs:{id:"为什么-usestate-要使用数组而不是对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#为什么-usestate-要使用数组而不是对象"}},[t._v("#")]),t._v(" 为什么 useState 要使用数组而不是对象")]),t._v(" "),s("details",{staticClass:"custom-block details"},[s("summary",[t._v("答案")]),t._v(" "),s("ul",[s("li",[t._v("如果 useState 返回的是数组，那么使用者可以对数组中的元素命名，代码看起来也比较干净")]),t._v(" "),s("li",[t._v("如果 useState 返回的是对象，在解构对象的时候必须要和 useState 内部实现返回的对象同名，想要使用多次的话，必须得设置别名才能使用返回值")])])]),t._v(" "),s("h3",{attrs:{id:"react-hooks-解决了哪些问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#react-hooks-解决了哪些问题"}},[t._v("#")]),t._v(" React Hooks 解决了哪些问题？")]),t._v(" "),s("details",{staticClass:"custom-block details"},[s("summary",[t._v("答案")]),t._v(" "),s("ul",[s("li",[t._v("在组件之间复用状态逻辑很难")]),t._v(" "),s("li",[t._v("复杂组件变得难以理解")]),t._v(" "),s("li",[t._v("难以理解的 class")])])]),t._v(" "),s("h3",{attrs:{id:"react-hook-的使用限制有哪些"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#react-hook-的使用限制有哪些"}},[t._v("#")]),t._v(" React Hook 的使用限制有哪些？")]),t._v(" "),s("details",{staticClass:"custom-block details"},[s("summary",[t._v("答案")]),t._v(" "),s("ul",[s("li",[t._v("不要在循环、条件或嵌套函数中调用 Hook；")]),t._v(" "),s("li",[t._v("必须在 React 的函数组件中调用 Hook。")])]),t._v(" "),s("p",[s("em",[t._v("因为 Hooks 的设计是基于数组实现。在调用时按顺序加入数组中，如果使用循环、条件或嵌套函数很有可能导致数组取值错位，执行错误的 Hook。当然，实质上 React 的源码里不是数组，是链表。")])])]),t._v(" "),s("h3",{attrs:{id:"useeffect-与-uselayouteffect-的相同与不同"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#useeffect-与-uselayouteffect-的相同与不同"}},[t._v("#")]),t._v(" useEffect 与 useLayoutEffect 的相同与不同")]),t._v(" "),s("details",{staticClass:"custom-block details"},[s("summary",[t._v("答案")]),t._v(" "),s("ul",[s("li",[t._v("useEffect 与 useLayoutEffect 两者都是用于处理副作用")]),t._v(" "),s("li",[t._v("useEffect 在 React 的渲染过程中是被异步调用的，用于绝大多数场景；而 useLayoutEffect 会在所有的 DOM 变更之后同步调用，主要用于处理 DOM 操作、调整样式、避免页面闪烁等问题。也正因为是同步处理，所以需要避免在 useLayoutEffect 做计算量较大的耗时任务从而造成阻塞。"),s("br"),t._v(" "),s("em",[t._v("useLayoutEffect总是比useEffect先执行")])])])]),t._v(" "),s("h3",{attrs:{id:"使用usestate时候-使用push-pop-splice等直接更改数组对象的坑"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用usestate时候-使用push-pop-splice等直接更改数组对象的坑"}},[t._v("#")]),t._v(" 使用useState时候，使用push，pop，splice等直接更改数组对象的坑")]),t._v(" "),s("details",{staticClass:"custom-block details"},[s("summary",[t._v("答案")]),t._v(" "),s("ul",[s("li",[t._v("使用push直接更改数组无法获取到新值，应该采用析构方式(...arr, newItem)")])]),t._v(" "),s("div",{staticClass:"language-jsx line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-jsx"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Indicatorfilter")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("num"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("setNums"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("useState")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("test")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 这里坑是直接采用push去更新num")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// setNums(num)是无法更新num的")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 必须使用num = [...num ,1]")]),t._v("\n    num"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// num = [...num ,1]")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setNums")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("num"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("className")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("'")]),t._v("filter"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("'")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("\n      ")]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("onClick")]),s("span",{pre:!0,attrs:{class:"token script language-javascript"}},[s("span",{pre:!0,attrs:{class:"token script-punctuation punctuation"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("test"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("测试")]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("\n        ")]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("\n          ")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("num"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("map")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("item"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("index")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n              "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("key")]),s("span",{pre:!0,attrs:{class:"token script language-javascript"}},[s("span",{pre:!0,attrs:{class:"token script-punctuation punctuation"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("index"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("item"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("\n      ")]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("\n    ")]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br"),s("span",{staticClass:"line-number"},[t._v("18")]),s("br"),s("span",{staticClass:"line-number"},[t._v("19")]),s("br"),s("span",{staticClass:"line-number"},[t._v("20")]),s("br"),s("span",{staticClass:"line-number"},[t._v("21")]),s("br")])])]),t._v(" "),s("h2",{attrs:{id:"虚拟dom"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#虚拟dom"}},[t._v("#")]),t._v(" 虚拟dom")]),t._v(" "),s("h3",{attrs:{id:"为什么要用虚拟dom"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#为什么要用虚拟dom"}},[t._v("#")]),t._v(" 为什么要用虚拟dom")]),t._v(" "),s("details",{staticClass:"custom-block details"},[s("summary",[t._v("答案")]),t._v(" "),s("ol",[s("li",[t._v("保证性能下限，在不进行手动优化的情况下，提供过得去的性能")]),t._v(" "),s("li",[t._v("跨平台 Virtual DOM本质上是JavaScript的对象，它可以很方便的跨平台操作，比如服务端渲染、uniapp等。")])])]),t._v(" "),s("h3",{attrs:{id:"react-diff算法的流程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#react-diff算法的流程"}},[t._v("#")]),t._v(" React Diff算法的流程")]),t._v(" "),s("details",{staticClass:"custom-block details"},[s("summary",[t._v("答案")]),t._v(" "),s("ol",[s("li",[t._v("真实的 DOM 首先会映射为虚拟 DOM；")]),t._v(" "),s("li",[t._v("当虚拟 DOM 发生变化后，就会根据差距计算生成 patch，这个 patch 是一个结构化的数据，内容包含了增加、更新、移除等；")]),t._v(" "),s("li",[t._v("根据 patch 去更新真实的 DOM，反馈到用户的界面上。"),s("br"),t._v(" "),s("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/246e03a02e3e48ff941f921843bd8676~tplv-k3u1fbpfcp-watermark.awebp",alt:"diff算法流程"}})])])]),t._v(" "),s("h3",{attrs:{id:"react-diff算法优化策略"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#react-diff算法优化策略"}},[t._v("#")]),t._v(" react diff算法优化策略")]),t._v(" "),s("details",{staticClass:"custom-block details"},[s("summary",[t._v("答案")]),t._v(" "),s("ul",[s("li",[t._v("策略一：忽略节点跨层级操作场景，提升比对效率。（基于树进行对比）")]),t._v(" "),s("li",[t._v("策略二：如果组件的 class 一致，则默认为相似的树结构，否则默认为不同的树结构。（基于组件进行对比）")]),t._v(" "),s("li",[t._v("策略三：同一层级的子节点，可以通过标记 key 的方式进行列表对比。（基于节点进行对比）")])])]),t._v(" "),s("h3",{attrs:{id:"react-key是做什么的-为什么需要key"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#react-key是做什么的-为什么需要key"}},[t._v("#")]),t._v(" react key是做什么的？为什么需要key")]),t._v(" "),s("details",{staticClass:"custom-block details"},[s("summary",[t._v("答案")]),t._v(" "),s("ul",[s("li",[t._v("Keys 是 React 用于追踪哪些列表中元素被修改、被添加或者被移除的辅助标识。在开发过程中，我们需要保证某个元素的 key 在其同级元素中具有唯一性。")])])]),t._v(" "),s("h3",{attrs:{id:"react和vue的diff算法有何不同"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#react和vue的diff算法有何不同"}},[t._v("#")]),t._v(" react和vue的diff算法有何不同")]),t._v(" "),s("details",{staticClass:"custom-block details"},[s("summary",[t._v("答案")]),t._v(" "),s("ul",[s("li",[t._v("自 React 16 起，引入了 Fiber 架构。为了使整个更新过程可随时暂停恢复，节点与树分别采用了 FiberNode 与 FiberTree 进行重构。fiberNode 使用了双链表的结构，可以直接找到兄弟节点与子节点。整个更新过程由 current 与 workInProgress 两株树双缓冲完成。workInProgress 更新完成后，再通过修改 current 相关指针指向新节点。")]),t._v(" "),s("li",[t._v("Vue 的整体 diff 策略与 React 对齐，虽然缺乏时间切片能力，但这并不意味着 Vue 的性能更差，因为在 Vue 3 初期引入过，后期因为收益不高移除掉了。除了高帧率动画，在 Vue 中其他的场景几乎都可以使用防抖和节流去提高响应性能。")])])]),t._v(" "),s("h2",{attrs:{id:"其他"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#其他"}},[t._v("#")]),t._v(" 其他")]),t._v(" "),s("h3",{attrs:{id:"如何实现数据持久化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#如何实现数据持久化"}},[t._v("#")]),t._v(" 如何实现数据持久化")]),t._v(" "),s("details",{staticClass:"custom-block details"},[s("summary",[t._v("答案")]),t._v(" "),s("ul",[s("li",[t._v("redux-persist。redux-persist会将redux的store中的数据缓存到浏览器的localStorage中。")])])]),t._v(" "),s("h3",{attrs:{id:"对比一下vue和react"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#对比一下vue和react"}},[t._v("#")]),t._v(" 对比一下vue和react")]),t._v(" "),s("details",{staticClass:"custom-block details"},[s("summary",[t._v("答案")]),t._v(" "),s("ul",[s("li",[t._v("相同\n"),s("ul",[s("li",[t._v("都将注意力集中保持在核心库，而将其他功能如路由和全局状态管理交给相关的库")]),t._v(" "),s("li",[t._v("都有自己的构建工具，能让你得到一个根据最佳实践设置的项目模板。")]),t._v(" "),s("li",[t._v("都使用了Virtual DOM（虚拟DOM）提高重绘性能")]),t._v(" "),s("li",[t._v("都有props的概念，允许组件间的数据传递")]),t._v(" "),s("li",[t._v("都鼓励组件化应用，将应用分拆成一个个功能明确的模块，提高复用性")])])]),t._v(" "),s("li",[t._v("不同\n"),s("ul",[s("li",[t._v("Vue默认支持数据双向绑定，而React一直提倡单向数据流")]),t._v(" "),s("li",[t._v("Vue宣称可以更快地计算出Virtual DOM的差异，这是由于它在渲染过程中，会跟踪每一个组件的依赖关系，不需要重新渲染整个组件树。")]),t._v(" "),s("li",[t._v("对于React而言，每当应用的状态被改变时，全部子组件都会重新渲染。当然，这可以通过 PureComponent/shouldComponentUpdate这个生命周期方法来进行控制，但Vue将此视为默认的优化。")]),t._v(" "),s("li",[t._v("Vue鼓励写近似常规HTML的模板。写起来很接近标准 HTML元素，只是多了一些属性。React推荐你所有的模板通用JavaScript的语法扩展——JSX书写。")]),t._v(" "),s("li",[t._v("Vue 通过 getter/setter 以及一些函数的劫持，能精确知道数据变化，不需要特别的优化就能达到很好的性能")]),t._v(" "),s("li",[t._v("React 默认是通过比较引用的方式进行的，如果不优化（PureComponent/shouldComponentUpdate）可能导致大量不必要的vDOM的重新渲染。这是因为 Vue 使用的是可变数据，而React更强调数据的不可变。")]),t._v(" "),s("li",[t._v("react可以通过高阶组件（Higher Order Components-- HOC）来扩展，而vue需要通过mixins来扩展。")])])])])]),t._v(" "),s("h3",{attrs:{id:"react的状态提升是什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#react的状态提升是什么"}},[t._v("#")]),t._v(" React的状态提升是什么？")]),t._v(" "),s("details",{staticClass:"custom-block details"},[s("summary",[t._v("答案")]),t._v(" "),s("ul",[s("li",[t._v("将多个组件需要共享的状态提升到它们最近的父组件上，在父组件上改变这个状态然后通过props分发给子组件。")])])]),t._v(" "),s("p",[s("em",[t._v("该页面数据由本人编写+网上论坛整理所得")])]),t._v(" "),s("p",[s("em",[t._v("参考数据地址")])]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://juejin.cn/post/6941546135827775525",target:"_blank",rel:"noopener noreferrer"}},[t._v("「2021」高频前端面试题汇总之React篇（上） -CUGGZ"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://juejin.cn/post/6940942549305524238",target:"_blank",rel:"noopener noreferrer"}},[t._v("「2021」高频前端面试题汇总之React篇（下） -CUGGZ"),s("OutboundLink")],1)])])])}),[],!1,null,null,null);a.default=n.exports}}]);